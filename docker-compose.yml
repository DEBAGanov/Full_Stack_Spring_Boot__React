#version: "3.8"
#
#services:
#  postgres:
#    image: postgres:latest
#    container_name: postgres
#    environment:
#      POSTGRES_PASSWORD: password
#      POSTGRES_USER: postgres
#      POSTGRES_DB: postgres
#    ports:
#      - "5432:5432"
#    networks:
#      - app-network
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U postgres"]
#      interval: 5s
#      timeout: 5s
#      retries: 5
#      start_period: 10s
#    volumes:
#      - postgres-data:/var/lib/postgresql/data
#    command: ["postgres", "-c", "listen_addresses=*"]
#
#  app:
#    build: .
#    container_name: spring-boot-app
#    depends_on:
#      postgres:
#        condition: service_healthy
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/postgres
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: password
#      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
#      SPRING_JPA_SHOW_SQL: "true"
#      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
#      SPRING_FLYWAY_ENABLED: "true"
#      SPRING_FLYWAY_BASELINE_ON_MIGRATE: "true"
#    ports:
#      - "8080:8080"
#    networks:
#      - app-network
#    restart: unless-stopped
#
#networks:
#  app-network:
#    driver: bridge
#
#volumes:
#  postgres-data:
